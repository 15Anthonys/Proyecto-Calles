/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto.calles;
import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;
import javax.swing.*;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import java.io.*;



/**
 *
 * @author dugla
 */
public class InterfazPrueba extends javax.swing.JFrame {

    /**
     * Creates new form InterfazPrueba
     */
    public InterfazPrueba() {
        initComponents();
        setLocationRelativeTo(null);
        inputArea.setEditable(false);
        jButton1.setEnabled(false);
    }
    
    private static boolean validarFormatoJson(String jsonString) {
        try {
            JSONObject jsonObject = new JSONObject(new JSONTokener(jsonString));
            for (String key : jsonObject.keySet()) {
                JSONArray metro = jsonObject.getJSONArray(key); // No validamos el nombre, solo la estructura
                for (int i = 0; i < metro.length(); i++) {
                    JSONObject line = metro.getJSONObject(i);
                    String lineName = line.keys().next();
                    JSONArray stops = line.getJSONArray(lineName);
                    for (int j = 0; j < stops.length(); j++) {
                        Object stop = stops.get(j);
                        if (stop instanceof JSONObject) {
                            // Validar formato de parada con nombre y conexi칩n
                            JSONObject stopObj = (JSONObject) stop;
                            if (stopObj.keys().hasNext()) {
                                String from = stopObj.keys().next();
                                String to = stopObj.getString(from);
                                if (from.isEmpty() || to.isEmpty()) {
                                    return false;
                                }
                            } else {
                                return false;
                            }
                        } else if (!(stop instanceof String)) {
                            // Asegurarse de que sea una cadena si no es un objeto JSON
                            return false;
                        }
                    }
                }
            }
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    
    // Define el filtro de archivos
    
    private static String getFileExtension(File file) {
        String name = file.getName();
        int lastIndex = name.lastIndexOf('.');
        if (lastIndex == -1) {
            return "";
        }
        return name.substring(lastIndex + 1);
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        Boton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(239, 206, 206));
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputArea.setColumns(20);
        inputArea.setRows(5);
        jScrollPane1.setViewportView(inputArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 590, 170));

        jButton1.setBackground(new java.awt.Color(153, 255, 153));
        jButton1.setText("Siguiente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, -1, -1));

        Boton1.setBackground(new java.awt.Color(204, 204, 255));
        Boton1.setText("Cargar Paradas");
        Boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton1ActionPerformed(evt);
            }
        });
        getContentPane().add(Boton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, -1, -1));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Bienvenidos al Selector de Sucursales de supermercados");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 690, 20));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("El Area de texto es para mostrar tus paradas, no es modificable para hechos iterativos");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 570, 20));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 430, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();

        // Define el filtro de archivos
        fileChooser.setFileFilter(new FileFilter() {
            @Override
            public boolean accept(File file) {
                if (file.isDirectory()) {
                    return true;
                }
                String extension = getFileExtension(file);
                return extension.equals("json");
            }

            @Override
            public String getDescription() {
                return "Archivos JSON (*.json)";
            }
        });

        int result = fileChooser.showOpenDialog(rootPane);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String extension = getFileExtension(selectedFile);
            if (!extension.equals("json")) {
                JOptionPane.showMessageDialog(rootPane,
                        "Archivo no v치lido. Por favor, selecciona un archivo JSON.",
                        "Error de tipo de archivo",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                try (BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {
                    StringBuilder jsonContent = new StringBuilder();
                    String line;
                    while ((line = reader.readLine()) != null) {
                        jsonContent.append(line).append("\n");
                    }
                    JOptionPane.showMessageDialog(rootPane, "Archivo seleccionado correctamente");
                    jButton1.setEnabled(true);
                    inputArea.setText(jsonContent.toString());
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(rootPane,
                            "Error al leer el archivo: " + e.getMessage(),
                            "Error de lectura",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        
        
        
    }//GEN-LAST:event_Boton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        String traertexto = inputArea.getText();
        boolean Esvalido = validarFormatoJson(traertexto);
        if (Esvalido) {
                JOptionPane.showMessageDialog(rootPane, "Formato v치lido");
                Ventana2 ventanita2 = new Ventana2(this);
                ventanita2.SetData(traertexto);
                ventanita2.setVisible(true);
                this.setVisible(false);
                
            } else {
                JOptionPane.showMessageDialog(rootPane, "Formato inv치lido. Revisa el contenido.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
            }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazPrueba().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton1;
    private javax.swing.JTextArea inputArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
